WPPlugin TestPlugin
{
    Entity Empty
    {
        ShortString StringVal { Required; DefaultValue "'Test value'"; }
        ShortString StringVal2 { Required; DefaultEmpty; }
        Integer IntVal { Required; DefaultZero; }
        Bool BoolVal { Required; DefaultTrue; }
        Bool BoolVal2 { Required; DefaultFalse; }

        Reference Ref TestPlugin.TestEntity { }

        DropOnDeactivate;
    }

    // DataStructures
    Entity TestEntity
    {
        // DropOnDeactivate;

        ShortString title;
        Integer count;
        Bool active;

        OwnerContext;

        AllowCapability TestPlugin.Read;

        Filter Active active '1' '%d';
    }

    List SomeList TestPlugin.TestEntity
    {
        Take title;

        AllowAll;
    }

    Entity TestChildEntity
    {
        // DropOnDeactivate;

        ShortString child_title;
        Reference parent TestPlugin.TestEntity;
    }

    Select FlatSelect "
        SELECT ID, title, owner_id
        FROM {$table('TestPlugin.TestEntity')}
        WHERE active=1 AND owner_id={$user_id()}
        ORDER BY ID DESC;
    "
    {
        Integer ID;
        ShortString title;

        AllowAll;

        Action TestPlugin.GetSomething;
    }

    Callback GetSomething '
        $result = ( new TestPlugin_FlatSelect_Repository() )->get();
        return array_filter( $result, fn ( $item ) => is_null( $item->parent_id ) );
    ';

    UserMeta TestUserMeta
    {
        ShortString StringVal { Default 'date( "Ym", strtotime( wp_get_current_user()->user_registered ) )'; }
        Integer IntVal { Default '(int) date("Y", strtotime("+5 years"))'; }
        Bool BoolVal;
    }

    // Roles & capabilities
    Role Subscriber
    {
        Capability TestPlugin.Read;
    }

    Role TestRole 'Test Plugin'
    {
        Capability TestPlugin.Read;
    }

    Role TesAdmin 'Test Plugin Administrator'
    {
        Capability TestPlugin.Manage;
    }

    Capability Read;
    Capability Manage;

    DefaultRole TestPlugin.TestRole;

    // Action hooks
    ActionHook 'admin_notices' TestPlugin.SayHello;
    Callback SayHello '?><div class="notice notice-success is-dismissible"><p><?php echo "Hello World!" ?></p></div><?php';

    // Filter hooks
    FilterHook 'document_title' TestPlugin.SetWebsiteTitle DefaultPriority '$title';
    Callback SetWebsiteTitle 'return $title . " - My Great Website";';

    // Activation & deactivation hooks
    ActivationHook TestPlugin.TestActivationConcept;
    Callback TestActivationConcept '// ActivationAction concept test ';

    DeactivationHook TestPlugin.TestDeactivationConcept;
    Callback TestDeactivationConcept '// DeactivationAction concept test ';

    UninstallHook TestPlugin.TestUninstallConcept;
    Callback TestUninstallConcept '// UninstallAction concept test ';
}